{
  "_args": [
    [
      {
        "raw": "expo-web-browser@~7.0.0",
        "scope": null,
        "escapedName": "expo-web-browser",
        "name": "expo-web-browser",
        "rawSpec": "~7.0.0",
        "spec": ">=7.0.0 <7.1.0",
        "type": "range"
      },
      "/home/satya/Desktop/SE/testing/node_modules/expo"
    ]
  ],
  "_from": "expo-web-browser@~7.0.0",
  "_hasShrinkwrap": false,
  "_id": "expo-web-browser@7.0.1",
  "_location": "/expo-web-browser",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/expo-web-browser_7.0.1_1569322674800_0.13220759644135982"
  },
  "_npmUser": {
    "name": "sjchmiela",
    "email": "sjchmiela@gmail.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "expo-web-browser@~7.0.0",
    "scope": null,
    "escapedName": "expo-web-browser",
    "name": "expo-web-browser",
    "rawSpec": "~7.0.0",
    "spec": ">=7.0.0 <7.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/expo"
  ],
  "_resolved": "https://registry.npmjs.org/expo-web-browser/-/expo-web-browser-7.0.1.tgz",
  "_shasum": "b64ef895b5c0604f312b64b085f7a2f1da630e20",
  "_shrinkwrap": null,
  "_spec": "expo-web-browser@~7.0.0",
  "_where": "/home/satya/Desktop/SE/testing/node_modules/expo",
  "author": {
    "name": "650 Industries, Inc."
  },
  "bugs": {
    "url": "https://github.com/expo/expo/issues"
  },
  "dependencies": {},
  "description": "Provides access to the system's web browser and supports handling redirects. On iOS, it uses SFSafariViewController or SFAuthenticationSession, depending on the method you call, and on Android it uses ChromeCustomTabs. As of iOS 11, SFSafariViewController no longer shares cookies with the Safari, so if you are using WebBrowser for authentication you will want to use WebBrowser.openAuthSessionAsync, and if you just want to open a webpage (such as your app privacy policy), then use WebBrowser.openBrowserAsync.",
  "devDependencies": {
    "expo-module-scripts": "~1.1.1"
  },
  "directories": {},
  "dist": {
    "shasum": "b64ef895b5c0604f312b64b085f7a2f1da630e20",
    "integrity": "sha512-THjqlMitUsjHUGYEfag2ybdhgZpp0C4ATixfNpWlS/8vTM4Sw/KGfwB0VuqtqLUMT2q2MTJSrlrWY8Boi4yvTg==",
    "tarball": "https://registry.npmjs.org/expo-web-browser/-/expo-web-browser-7.0.1.tgz",
    "fileCount": 34,
    "unpackedSize": 64488,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdifazCRA9TVsSAnZWagAA544P/iEVpeNkKgqs/AXzgbiY\nMGA+C6jqWfUooPP5czDaS17WosbkTFuaQeSiZgMVyolxwOTPyji5HQ3nx3+Z\n+eoDHbMKj8fw79faNgVsLOM1D6225IWa8QXH+Iv2raQas5IVEuJka6U4vY+W\nvjJI+z6+PZhY4JzPgQkJFyz51FlwrOTePlvQDwVHdwL5o40+99ES7Y80NHr5\nmoFb9TaszJCxdmZz3KTur+Uzm02mjNnyIc5XIIQA46Feuuc0K+H1waVVPcQp\nQSA0cvDaUuVSRxD1nVJfidBnPmc6qfSUGaiC1hHhK1mpuv0tC59Ur204fSbe\njpJjYDcEBCz7q+lqxwiUHh9FIpqz6wpKDMCpMRFVdl9ZUYK3nX3mK6TWTnjC\n9s1d6NXR7jwHqOVD+APmXxqdHknUOdl6y+OGVBZGb6tYoLIdZPzZRLWFKWyk\n6ZdwnD+SJHs9wFQwUCQDKrpB0N1w3WhYL7lvyu3XwkOfDBfLVcs3u3g4b3Bi\nkm24e8S9pqsdINQa/0O+9f8s8i8UzRxJH5pggqIPDt0ENb6f8gIxHor2e9qe\nW8JcSm4ggsDJ8SmadwYobDvYCyeAU7hnCefsKxNfqXczJiPmlCeiqTkKG03U\nRkZznxNseRsDEp3KVdZafgX4nMlPc5EMao8SpgLTznibweuSpMeOE5PWsl7y\nlTva\r\n=Z6Us\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "0c19cbacb5214d248f69014505f29f42261fa737",
  "homepage": "https://docs.expo.io/versions/latest/sdk/webbrowser/",
  "jest": {
    "preset": "expo-module-scripts"
  },
  "keywords": [
    "react-native",
    "expo",
    "expo-web-browser",
    "web",
    "browser"
  ],
  "license": "MIT",
  "main": "build/WebBrowser.js",
  "maintainers": [
    {
      "name": "bbarthec",
      "email": "bartlomiejbukowski.b@gmail.com"
    },
    {
      "name": "brentvatne",
      "email": "brentvatne@gmail.com"
    },
    {
      "name": "ccheever",
      "email": "ccheever@gmail.com"
    },
    {
      "name": "charliecruzan",
      "email": "charliecruzan@gmail.com"
    },
    {
      "name": "dsokal",
      "email": "dominiksokal@gmail.com"
    },
    {
      "name": "esamelson",
      "email": "eric@expo.io"
    },
    {
      "name": "evanbacon",
      "email": "baconbrix@gmail.com"
    },
    {
      "name": "expoadmin",
      "email": "support@expo.io"
    },
    {
      "name": "fson",
      "email": "ville.immonen@iki.fi"
    },
    {
      "name": "ide",
      "email": "ide+npm@jameside.com"
    },
    {
      "name": "mczernek",
      "email": "czernekmichal@gmail.com"
    },
    {
      "name": "quinlanj",
      "email": "quinlanjung@gmail.com"
    },
    {
      "name": "sjchmiela",
      "email": "sjchmiela@gmail.com"
    },
    {
      "name": "szymon20000",
      "email": "szymon.kapala@swmansion.com"
    },
    {
      "name": "tsapeta",
      "email": "sapeta.tomasz@gmail.com"
    },
    {
      "name": "wkozyra",
      "email": "wojciech.kozyra@swmansion.com"
    }
  ],
  "name": "expo-web-browser",
  "optionalDependencies": {},
  "readme": "# expo-web-browser\n\nProvides access to the system's web browser and supports handling redirects. On iOS, it uses SFSafariViewController or SFAuthenticationSession, depending on the method you call, and on Android it uses ChromeCustomTabs. As of iOS 11, SFSafariViewController no longer shares cookies with the Safari, so if you are using WebBrowser for authentication you will want to use WebBrowser.openAuthSessionAsync, and if you just want to open a webpage (such as your app privacy policy), then use WebBrowser.openBrowserAsync.\n\n# API documentation\n\n- [Documentation for the master branch](https://github.com/expo/expo/blob/master/docs/pages/versions/unversioned/sdk/webbrowser.md)\n- [Documentation for the latest stable release](https://docs.expo.io/versions/latest/sdk/webbrowser/)\n\n# Installation in managed Expo projects\n\nFor managed [managed](https://docs.expo.io/versions/latest/introduction/managed-vs-bare/) Expo projects, please follow the installation instructions in the [API documentation for the latest stable release](#api-documentation). If you follow the link and there is no documentation available then this library is not yet usable within managed projects &mdash; it is likely to be included in an upcoming Expo SDK release.\n\n# Installation in bare React Native projects\n\nFor bare React Native projects, you must ensure that you have [installed and configured the `react-native-unimodules` package](https://github.com/unimodules/react-native-unimodules) before continuing.\n\n### Add the package to your npm dependencies\n\n```\nnpm install expo-web-browser\n```\n\n### Configure for iOS\n\nRun `pod install` in the ios directory after installing the npm package.\n\n### Configure for Android\n\nNo additional set up necessary.\n\n# Contributing\n\nContributions are very welcome! Please refer to guidelines described in the [contributing guide]( https://github.com/expo/expo#contributing).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/expo/expo.git",
    "directory": "packages/expo-web-browser"
  },
  "scripts": {
    "build": "expo-module build",
    "clean": "expo-module clean",
    "expo-module": "expo-module",
    "lint": "expo-module lint",
    "prepare": "expo-module prepare",
    "prepublishOnly": "expo-module prepublishOnly",
    "test": "expo-module test"
  },
  "sideEffects": false,
  "types": "build/WebBrowser.d.ts",
  "unimodulePeerDependencies": {
    "@unimodules/core": "*"
  },
  "version": "7.0.1"
}
